@using Nager.Date
@using Spire.Pdf.Exporting.XPS.Schema
@model MovieHub.ViewModels.OrderViewModel

@{
    var title = Model!.Movie!.Title;
    ViewData["Title"] = "Buy '" + title + "' tickets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>

let ticketQuantity;
let ticketName;
let packageQuantity;
let packageName;

function BuyTickets()
{
    // Showinfo:
    let selectedShow = document.getElementById('selectedShow')
    let showtimeId = parseInt(selectedShow.value)
   
    // Ticketinfo: 
    ticketQuantity = document.querySelectorAll('.ticketQuantity')
    ticketName = document.querySelectorAll('.ticketName')
    let ticketTypes = CountTickets(ticketQuantity, ticketName); 
    let totalTickets = TotalTickets(ticketQuantity)
    
    //Packageinfo:
    packageQuantity = document.querySelectorAll('.packageQuantity')
    packageName = document.querySelectorAll('.packageName')
    let cateringPackages = CountTickets(packageQuantity, packageName); 
    
    // 
    if (!showtimeId || totalTickets === 0) {
        document.getElementById('ErrorNoSelection').style.color = "red";
        document.getElementById('ErrorNoSelection').innerHTML = "Please fill in all fields";
        return
    }
       
    console.log(showtimeId)
    console.log(totalTickets)
    console.log(ticketTypes)
    console.log(cateringPackages)
    
    
    location.href='@Url.Action("Index", "Seats")?showtimeId='+JSON.stringify(showtimeId)+'&totalTickets='+JSON.stringify(totalTickets)+'&'+ticketTypes+'&'+cateringPackages;

}

function CountTickets (ticketQuantity, ticketName) {
    let ticketTypes = "";
  
    for (let i = 0; i < ticketQuantity.length; i++)
    {
        let ticketString = ticketName[i].innerHTML + "=" + parseInt(ticketQuantity[i].value) + "&"; 
        ticketTypes += ticketString
        
    }
    return (ticketTypes.slice(0, -1));
}

function TotalTickets(ticketQuantity) {
    let sumTq = 0;
    
    ticketQuantity.forEach((tq, index) => {
        
        sumTq = sumTq + parseInt(tq.value)
    })
    return sumTq
}

function CountPackages (packageQuantity, packageName) {
    let cateringPackages = "";
  
    for (let i = 0; i < packageQuantity.length; i++)
    {
        let packageString = packageName[i].innerHTML + "=" + parseInt(packageQuantity[i].value) + "&"; 
        cateringPackages += packageString
        
    }
    return (cateringPackages.slice(0, -1));
}
</script>  

<div class="container" style="margin-top: 120px">
    <dl class="row">
        <div class="col-4">
            <img src="@Url.Content(@Model.Movie.ImageUrl)" alt="test" width="80%"/>
        </div>
        <div class="col-8">
            <h4>Selected Showtime:</h4>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Movie!.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Movie!.Title)
            </dd>

            <div class="form-group" style="width: 30%">
                @Html.LabelFor(m => Model.Showtime, new { @class = "control-label col-md-2" })
                <div>
                    @Html.DropDownListFor(m => Model.Showtime!.StartAt, new SelectList(Model.ShowList, "Value", "Text"), "Select show", new { @class = "form-control", id="selectedShow"})
                </div>
            </div>
            <br/>
            <h4>Ticket Selection:</h4>
        
            <table>
                <tr>
                    <th>Quantity</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Details</th>
                </tr>
                
                @{
                    System.Diagnostics.Debug.Assert(Model.Tickettypes != null, "Model.Tickettypes != null");
                }
                @foreach (var ticket in Model.Tickettypes)
                {
                    var dateNow = DateTime.Now;
                    var day = DateTime.Now.DayOfWeek;
                    var kidsBedTime = new DateTime(dateNow.Year, dateNow.Month, dateNow.Day, 18, 0, 0);
        
                    // TODO:    working on logic for kids discount add pegi rating
                    //          Problem is.... there are pegi ratings in db yet
                    if(((ticket.Name == "Kids") &
                        (
        
                        @* COMMENTED OUT BECAUSE SHOWTIME LATER ADDED TODO*@
                            // (Model.Showtime.StartAt > kidsBedTime) |
        
                            (Model.Movie.Language != "Dutch")
                            )
                        |
        
                        ((ticket.Name == "Students") & (!(day >= DayOfWeek.Monday & day <= DayOfWeek.Thursday)) |
        
                         ((((ticket.Name == "65+") & ((!(day >= DayOfWeek.Monday & day <= DayOfWeek.Thursday)) |
                                                      ((DateSystem.IsPublicHoliday(dateNow, CountryCode.NL))))))))
                        )
                        )
                    {
                        Console.WriteLine(ticket.Name + "Should be excluded");
                        continue;
                    }
        
                    if (ticket.Name != "3D")
                    {
                        <tr>
                            
                            <td style="width: 30%"><input type="number" asp-for=@ticket.Quantity class="form-control ticketQuantity" placeholder="Number of Tickets" min="1" max="10"/></td>
                            <td class="ticketName">@ticket.Name</td>
                            <td>@ticket.Price</td>
                            <td>@ticket.Description</td>
                        </tr>
                    }
                }
            </table>
        
            <br/><br/>
            <h4>Catering Arrangements:</h4>
            <table>
                <tr>
                    <th>Quantity</th>
                    <th hidden="hidden">Name</th>
                    <th>Details</th>
                    <th>Price</th>
                </tr>
        
        
                @{
                    System.Diagnostics.Debug.Assert(Model.CateringPackages != null, "Model.CateringPackages != null");
                }
                @foreach (var package in Model.CateringPackages)
                {
        
                    <tr>
                        <td style="width: 30%"><input type="number" asp-for=@package.Quantity class="form-control packageQuantity" placeholder="Number of Tickets" min="1" max="10"/></td>
                        <td class="packageName" hidden="hidden">@package.Name</td>
                        <td>@package.Description</td>
                        <td>@package.Price</td>
                    </tr>
        
                }
            </table>
            <br/><br/>
            <button onclick="BuyTickets()" class="btn btn-primary btn-sizing ms-1" style="margin-bottom: 2px">Select seats</button>
            <p class="text-center" id="ErrorNoSelection"></p>
        </div>

      </dl>
      <br/>
</div>
