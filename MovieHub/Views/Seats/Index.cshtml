@model MovieHub.ViewModels.OrderViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int seatsToSelect = 2; //TODO: get amount of tickets
}

<script >
    //seats is an object to prevent looping
    let seats = {};
    let seatsLeft = 0;
    function defaultSelect(row, seat){
        console.log(row, seat)
        if (!seats[row]){
            seats[row] = {};
        }
        //add seat to object
        seats[row][seat] = true;
        
    }
    function toggleSelected(seatElement, row, seat){
        let imgElement = seatElement.querySelector('img');
        if (seats[row] && seats[row][seat]){
            seatsLeft++;
            //remove seat from object
            delete seats[row][seat];
            //if last selected seat of row was removed remove row from object
            if (Object.keys(seats[row]).length === 0){
              delete seats[row];
            }
            imgElement.src = '@Url.Content("~/img/seat-available.png")';
        }else if (seatsLeft > 0){
            seatsLeft--;
            defaultSelect(row, seat);
            imgElement.src = '@Url.Content("~/img/seat-selected.png")';
        }
    }
    
    function getSelectedSeatsArray(){
        let seatsArray = [];
        for (const row of Object.keys(seats)) {
            console.log(row)
          for (const seatNumber of Object.keys(seats[row])) {
            seatsArray.push([row, seatNumber])
          }
        }
        return seatsArray
    }
    
    function getPaymentUrl(){
        location.href='@Url.Action("Index", "Payments", new {orderId = 2, Model})&seats='+JSON.stringify(getSelectedSeatsArray());
    }
</script>

<div class="container-fluid" style="margin-top: 120px">
    <h1>Select your seats</h1>
    @foreach (var row in Model.Seats.GroupBy(r => r.RowNumber).OrderByDescending(r => r.Key))
    {
        var rowList = row.ToList();
        <h4>Row @row.Key</h4>
        for (int i = 0; i < rowList.Count(); i++)
        {
            @if (rowList[i].Available)
            {
                @if (seatsToSelect > 0)
                {
                    <script>defaultSelect(@row.Key, @rowList[i].SeatNumber)</script>
                }
                <a type="button" onclick="toggleSelected(this, @row.Key, @rowList[i].SeatNumber)" class="img-container">
                    @if (seatsToSelect > 0)
                    {
                        seatsToSelect--;
                        <img src="@Url.Content("~/img/seat-selected.png")" width="48">
                    }
                    else
                    {
                        <img src="@Url.Content("~/img/seat-available.png")" width="48">
                    }
                    <div class="text-centered">
                        @Html.DisplayFor(s => rowList[i].SeatNumber)
                    </div>
                </a>
            }
            else
            {
                <a type="button" class="img-container">
                    <img src="@Url.Content("~/img/seat-not-available.png")" width="48">
                </a>
            }
        }
    }
    @if (seatsToSelect > 0)
    {
        <h1>There are not enough seats left for the amount of tickets you've selected</h1>
    }
    else
    {
        <br/>
        <br/>
        <button onclick="getPaymentUrl()"
                class="btn btn-primary">
            Continue to payment
        </button>
    }

</div>